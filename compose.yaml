networks:
  development:
    name: dev-network

services:
  liftup-dev-backend:
    container_name: liftup-dev-backend
    build: ./backend
    volumes:
      - ./backend/src:/app/src
      - ./backend/src/migrations:/app/src/migrations
      - ./backend/make-migration.js:/app/make-migration.js 
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      APP_SECRET: ${APP_SECRET}
      NODE_ENV: development
    depends_on:
      liftup-dev-database :
        condition: service_healthy
    networks:
      - development
  liftup-dev-frontend:
    container_name: liftup-dev-frontend
    build: ./frontend
    volumes: 
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/tailwind.config.js:/app/tailwind.config.js
    environment:
      VITE_GATEWAY_PORT: ${GATEWAY_PORT}
      VITE_BACKEND_HOST: ${BACKEND_HOST}
      VITE_FRONTEND_HOST: ${FRONTEND_HOST}
    networks:
      - development
  liftup-dev-database:
    container_name: liftup-dev-database
    image: postgres
    volumes:
      - ./persist/data/:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_SCHEMA}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_HOST: ${DB_HOST}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      retries: 5
    networks:
      - development
  liftup-dev-visualizer:
    container_name: liftup-dev-visualizer
    image: adminer
    networks:
      - development
  liftup-dev-file:
    container_name: liftup-dev-file
    build: ./file
    volumes:
      - ./file/uploads:/app/uploads
      - ./file/src:/app/src
    networks:
      - development
  liftup-dev-gateway: 
    container_name: liftup-dev-gateway
    image: nginx
    restart: always
    ports: 
      - ${GATEWAY_PORT}:80
    volumes:
      - ./nginx.dev.conf:/etc/nginx/nginx.conf
    networks:
      - development


