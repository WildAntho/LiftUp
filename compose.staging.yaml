networks:
  staging:
    name: staging

services:
  liftup-staging-backend:
    container_name: liftup-staging-backend
    image: wildantho/liftup-backend
    environment:
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_HOST: ${DB_HOST}
      APP_SECRET: ${APP_SECRET}
    depends_on:
        liftup-staging-database :
          condition: service_healthy
    networks:
      - staging
  liftup-staging-frontend:
    container_name: liftup-staging-frontend
    image: wildantho/liftup-frontend
    environment:
      VITE_GATEWAY_PORT: ${GATEWAY_PORT}
      VITE_BACKEND_HOST: ${BACKEND_HOST}
      VITE_FRONTEND_HOST: ${FRONTEND_HOST}
    networks:
      - staging
  liftup-staging-database:
    container_name: liftup-staging-database
    image: postgres
    volumes:
      - ./persist/staging-data/:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_SCHEMA}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_HOST: ${DB_HOST}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 5s
      retries: 5
    networks:
      - staging
  liftup-staging-visualizer:
    container_name: liftup-staging-visualizer
    image: adminer
    networks:
      - staging
  liftup-staging-file:
    container_name: liftup-staging-file
    image: wildantho/liftup-file
    volumes:
      - ./file/uploads:/app/uploads
      - ./file/src:/app/src
    networks:
      - staging
  liftup-staging-gateway: 
    container_name: liftup-staging-gateway
    image: nginx
    restart: always
    ports: 
      - ${GATEWAY_PORT}:80
    volumes:
      - ./nginx.staging.conf:/etc/nginx/nginx.conf
    networks:
      - staging


